{
  "contributions": {
    "settings": [
      {
        "file_patterns": [
          "/LSP-svelte.sublime-settings"
        ],
        "schema": {
          "$id": "sublime://settings/LSP-svelte",
          "definitions": {
            "PluginConfig": {
              "properties": {
                "settings": {
                  "additionalProperties": false,
                  "properties": {
                    "svelte.language-server.runtime": {
                      "scope": "application",
                      "type": "string",
                      "title": "Language Server Runtime",
                      "description": "- You normally don't need this - Path to the node executable to use to spawn the language server. Minimum required node version is 12.17. This setting can only be changed in user settings for security reasons."
                    },
                    "svelte.language-server.ls-path": {
                      "scope": "application",
                      "type": "string",
                      "title": "Language Server Path",
                      "description": "- You normally don't set this - Path to the language server executable. If you installed the \"svelte-language-server\" npm package, it's within there at \"bin/server.js\". Path can be either relative to your workspace root or absolute. Set this only if you want to use a custom version of the language server. This will then also use the workspace version of TypeScript. This setting can only be changed in user settings for security reasons."
                    },
                    "svelte.language-server.port": {
                      "type": "number",
                      "title": "Language Server Port",
                      "description": "- You normally don't set this - At which port to spawn the language server. Can be used for attaching to the process for debugging / profiling. If you experience crashes due to \"port already in use\", try setting the port. -1 = default port is used.",
                      "default": -1
                    },
                    "svelte.language-server.debug": {
                      "type": "boolean",
                      "title": "Language Server Debug Mode",
                      "description": "- You normally don't set this - Enable more verbose logging for the language server useful for debugging language server execution."
                    },
                    "svelte.trace.server": {
                      "type": "string",
                      "enum": [
                        "off",
                        "messages",
                        "verbose"
                      ],
                      "default": "off",
                      "description": "Traces the communication between the Sublime Text LSP client and the Svelte Language Server."
                    },
                    "svelte.plugin.typescript.enable": {
                      "type": "boolean",
                      "default": true,
                      "title": "TypeScript",
                      "description": "Enable the TypeScript plugin"
                    },
                    "svelte.plugin.typescript.diagnostics.enable": {
                      "type": "boolean",
                      "default": true,
                      "title": "TypeScript: Diagnostics",
                      "description": "Enable diagnostic messages for TypeScript"
                    },
                    "svelte.plugin.typescript.hover.enable": {
                      "type": "boolean",
                      "default": true,
                      "title": "TypeScript: Hover Info",
                      "description": "Enable hover info for TypeScript"
                    },
                    "svelte.plugin.typescript.documentSymbols.enable": {
                      "type": "boolean",
                      "default": true,
                      "title": "TypeScript: Symbols in Outline",
                      "description": "Enable document symbols for TypeScript"
                    },
                    "svelte.plugin.typescript.completions.enable": {
                      "type": "boolean",
                      "default": true,
                      "title": "TypeScript: Completions",
                      "description": "Enable completions for TypeScript"
                    },
                    "svelte.plugin.typescript.codeActions.enable": {
                      "type": "boolean",
                      "default": true,
                      "title": "TypeScript: Code Actions",
                      "description": "Enable code actions for TypeScript"
                    },
                    "svelte.plugin.typescript.selectionRange.enable": {
                      "type": "boolean",
                      "default": true,
                      "title": "TypeScript: Selection Range",
                      "description": "Enable selection range for TypeScript"
                    },
                    "svelte.plugin.typescript.signatureHelp.enable": {
                      "type": "boolean",
                      "default": true,
                      "title": "TypeScript: Signature Help",
                      "description": "Enable signature help (parameter hints) for TypeScript"
                    },
                    "svelte.plugin.typescript.semanticTokens.enable": {
                      "type": "boolean",
                      "default": true,
                      "title": "TypeScript: Semantic Tokens",
                      "description": "Enable semantic tokens (semantic highlight) for TypeScript."
                    },
                    "svelte.plugin.css.enable": {
                      "type": "boolean",
                      "default": true,
                      "title": "CSS",
                      "description": "Enable the CSS plugin"
                    },
                    "svelte.plugin.css.globals": {
                      "type": "string",
                      "default": "",
                      "title": "CSS: Global Files",
                      "description": "Which css files should be checked for global variables (`--global-var: value;`). These variables are added to the css completions. String of comma-separated file paths or globs relative to workspace root."
                    },
                    "svelte.plugin.css.diagnostics.enable": {
                      "type": "boolean",
                      "default": true,
                      "title": "CSS: Diagnostics",
                      "description": "Enable diagnostic messages for CSS"
                    },
                    "svelte.plugin.css.hover.enable": {
                      "type": "boolean",
                      "default": true,
                      "title": "CSS: Hover Info",
                      "description": "Enable hover info for CSS"
                    },
                    "svelte.plugin.css.completions.enable": {
                      "type": "boolean",
                      "default": true,
                      "title": "CSS: Auto Complete",
                      "description": "Enable auto completions for CSS"
                    },
                    "svelte.plugin.css.completions.emmet": {
                      "type": "boolean",
                      "default": true,
                      "title": "CSS: Include Emmet Completions",
                      "description": "Enable emmet auto completions for CSS"
                    },
                    "svelte.plugin.css.documentColors.enable": {
                      "type": "boolean",
                      "default": true,
                      "title": "CSS: Document Colors",
                      "description": "Enable document colors for CSS"
                    },
                    "svelte.plugin.css.colorPresentations.enable": {
                      "type": "boolean",
                      "default": true,
                      "title": "CSS: Color Picker",
                      "description": "Enable color picker for CSS"
                    },
                    "svelte.plugin.css.documentSymbols.enable": {
                      "type": "boolean",
                      "default": true,
                      "title": "CSS: Symbols in Outline",
                      "description": "Enable document symbols for CSS"
                    },
                    "svelte.plugin.css.selectionRange.enable": {
                      "type": "boolean",
                      "default": true,
                      "title": "CSS: SelectionRange",
                      "description": "Enable selection range for CSS"
                    },
                    "svelte.plugin.html.enable": {
                      "type": "boolean",
                      "default": true,
                      "title": "HTML",
                      "description": "Enable the HTML plugin"
                    },
                    "svelte.plugin.html.hover.enable": {
                      "type": "boolean",
                      "default": true,
                      "title": "HTML: Hover Info",
                      "description": "Enable hover info for HTML"
                    },
                    "svelte.plugin.html.completions.enable": {
                      "type": "boolean",
                      "default": true,
                      "title": "HTML: Auto Complete",
                      "description": "Enable auto completions for HTML"
                    },
                    "svelte.plugin.html.completions.emmet": {
                      "type": "boolean",
                      "default": true,
                      "title": "HTML: Include Emmet Completions",
                      "description": "Enable emmet auto completions for HTML"
                    },
                    "svelte.plugin.html.tagComplete.enable": {
                      "type": "boolean",
                      "default": true,
                      "title": "HTML: Tag Auto Closing",
                      "description": "Enable HTML tag auto closing"
                    },
                    "svelte.plugin.html.documentSymbols.enable": {
                      "type": "boolean",
                      "default": true,
                      "title": "HTML: Symbols in Outline",
                      "description": "Enable document symbols for HTML"
                    },
                    "svelte.plugin.html.linkedEditing.enable": {
                      "type": "boolean",
                      "default": true,
                      "title": "HTML: Linked Editing",
                      "description": "Enable Linked Editing for HTML"
                    },
                    "svelte.plugin.svelte.enable": {
                      "type": "boolean",
                      "default": true,
                      "title": "Svelte",
                      "description": "Enable the Svelte plugin"
                    },
                    "svelte.plugin.svelte.diagnostics.enable": {
                      "type": "boolean",
                      "default": true,
                      "title": "Svelte: Diagnostics",
                      "description": "Enable diagnostic messages for Svelte"
                    },
                    "svelte.plugin.svelte.compilerWarnings": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string",
                        "enum": [
                          "ignore",
                          "error"
                        ]
                      },
                      "default": {},
                      "title": "Svelte: Compiler Warnings Settings",
                      "description": "Svelte compiler warning codes to ignore or to treat as errors. Example: { 'css-unused-selector': 'ignore', 'unused-export-let': 'error'}"
                    },
                    "svelte.plugin.svelte.format.enable": {
                      "type": "boolean",
                      "default": true,
                      "title": "Svelte: Format",
                      "description": "Enable formatting for Svelte (includes css & js). You can set some formatting options through this extension. They will be ignored if there's any kind of configuration file, for example a `.prettierrc` file."
                    },
                    "svelte.plugin.svelte.format.config.svelteSortOrder": {
                      "type": "string",
                      "default": "options-scripts-markup-styles",
                      "title": "Svelte Format: Sort Order",
                      "description": "Format: join the keys `options`, `scripts`, `markup`, `styles` with a - in the order you want. This option is ignored if there's any kind of configuration file, for example a `.prettierrc` file."
                    },
                    "svelte.plugin.svelte.format.config.svelteStrictMode": {
                      "type": "boolean",
                      "default": false,
                      "title": "Svelte Format: Strict Mode",
                      "description": "More strict HTML syntax. This option is ignored if there's any kind of configuration file, for example a `.prettierrc` file."
                    },
                    "svelte.plugin.svelte.format.config.svelteAllowShorthand": {
                      "type": "boolean",
                      "default": true,
                      "title": "Svelte Format: Allow Shorthand",
                      "description": "Option to enable/disable component attribute shorthand if attribute name and expression are the same. This option is ignored if there's any kind of configuration file, for example a `.prettierrc` file."
                    },
                    "svelte.plugin.svelte.format.config.svelteBracketNewLine": {
                      "type": "boolean",
                      "default": true,
                      "title": "Svelte Format: Bracket New Line",
                      "description": "Put the `>` of a multiline element on a new line. This option is ignored if there's any kind of configuration file, for example a `.prettierrc` file."
                    },
                    "svelte.plugin.svelte.format.config.svelteIndentScriptAndStyle": {
                      "type": "boolean",
                      "default": true,
                      "title": "Svelte Format: Indent Script And Style",
                      "description": "Whether or not to indent code inside `<script>` and `<style>` tags. This option is ignored if there's any kind of configuration file, for example a `.prettierrc` file."
                    },
                    "svelte.plugin.svelte.format.config.printWidth": {
                      "type": "number",
                      "default": 80,
                      "title": "Svelte Format: Print Width",
                      "description": "Maximum line width after which code is tried to be broken up. This is a Prettier core option. If you have the Prettier extension installed, this option is ignored and the corresponding option of that extension is used instead. This option is also ignored if there's any kind of configuration file, for example a `.prettierrc` file."
                    },
                    "svelte.plugin.svelte.format.config.singleQuote": {
                      "type": "boolean",
                      "default": false,
                      "title": "Svelte Format: Quotes",
                      "description": "Use single quotes instead of double quotes, where possible. This is a Prettier core option. If you have the Prettier extension installed, this option is ignored and the corresponding option of that extension is used instead. This option is also ignored if there's any kind of configuration file, for example a `.prettierrc` file."
                    },
                    "svelte.plugin.svelte.completions.enable": {
                      "type": "boolean",
                      "default": true,
                      "title": "Svelte: Completions",
                      "description": "Enable auto completions for Svelte"
                    },
                    "svelte.plugin.svelte.hover.enable": {
                      "type": "boolean",
                      "default": true,
                      "title": "Svelte: Hover",
                      "description": "Enable hover information for Svelte"
                    },
                    "svelte.plugin.svelte.codeActions.enable": {
                      "type": "boolean",
                      "default": true,
                      "title": "Svelte: Code Actions",
                      "description": "Enable Code Actions for Svelte"
                    },
                    "svelte.plugin.svelte.selectionRange.enable": {
                      "type": "boolean",
                      "default": true,
                      "title": "Svelte: Selection Range",
                      "description": "Enable selection range for Svelte"
                    },
                    "svelte.plugin.svelte.rename.enable": {
                      "type": "boolean",
                      "default": true,
                      "title": "Svelte: Rename",
                      "description": "Enable rename/move Svelte files functionality"
                    },
                    "svelte.plugin.svelte.defaultScriptLanguage": {
                      "type": "string",
                      "default": "none",
                      "title": "Svelte: Default Script Language",
                      "description": "The default language to use when generating new script tags",
                      "enum": [
                        "none",
                        "ts"
                      ]
                    },
                    "typescript.inlayHints.enumMemberValues.enabled": {
                      "type": "boolean",
                      "default": false,
                      "markdownDescription": "Enable/disable inlay hints for member values in enum declarations: \n\n ```typescript\n enum MyValue {\n   A /* = 0 */;\n   B /* = 1 */;\n }\n ```\n \n Require TypeScript 4.4+."
                    },
                    "typescript.inlayHints.functionLikeReturnTypes.enabled": {
                      "type": "boolean",
                      "default": false,
                      "markdownDescription": "Enable/disable inlay hints for implicit return types on function signatures:\n\n ```typescript\n function foo() /* :number */ {\n   return Date.now();\n }\n ```\n Require TypeScript 4.4+."
                    },
                    "typescript.inlayHints.parameterTypes.enabled": {
                      "type": "boolean",
                      "default": false,
                      "markdownDescription": "Enable/disable inlay hints for parameter names: \n\n ```typescript\n parseInt(/* str: */ '123', /* radix: */ 8)\n ```\n Require TypeScript 4.4+."
                    },
                    "typescript.inlayHints.parameterNames.enabled": {
                      "enum": [
                        "all",
                        "literals",
                        "none"
                      ],
                      "default": "none",
                      "markdownEnumDescriptions": [
                        "Enable parameter name hints for literal and non-literal arguments.",
                        "Enable parameter name hints only for literal arguments.",
                        "Disable parameter name hints."
                      ]
                    },
                    "typescript.inlayHints.parameterNames.suppressWhenArgumentMatchesName": {
                      "type": "boolean",
                      "default": true,
                      "markdownDescription": ""
                    },
                    "typescript.inlayHints.propertyDeclarationTypes.enabled": {
                      "type": "boolean",
                      "default": false,
                      "markdownDescription": "Enable/disable inlay hints for implicit types on property declarations: \n\n ```typescript\n class Foo {\n   prop /* :number */ = Date.now;\n }\n ```\n Require TypeScript 4.4+."
                    },
                    "typescript.inlayHints.variableTypes.enabled": {
                      "type": "boolean",
                      "default": false,
                      "markdownDescription": "Enable/disable inlay hints for implicit variable types: \n\n ```typescript\n const foo /* :number */ = Date.now();\n ``` \n Require TypeScript 4.4+."
                    },
                    "typescript.inlayHints.variableTypes.suppressWhenTypeMatchesName.enabled": {
                      "type": "boolean",
                      "default": true,
                    },
                    "javascript.inlayHints.enumMemberValues.enabled": {
                      "type": "boolean",
                      "default": false,
                      "markdownDescription": "Enable/disable inlay hints for member values in enum declarations: \n\n ```typescript\n enum MyValue {\n   A /* = 0 */;\n   B /* = 1 */;\n }\n ```\n \n Require TypeScript 4.4+."
                    },
                    "javascript.inlayHints.functionLikeReturnTypes.enabled": {
                      "type": "boolean",
                      "default": false,
                      "markdownDescription": "Enable/disable inlay hints for implicit return types on function signatures:\n\n ```typescript\n function foo() /* :number */ {\n   return Date.now();\n }\n ```\n Require TypeScript 4.4+."
                    },
                    "javascript.inlayHints.parameterTypes.enabled": {
                      "type": "boolean",
                      "default": false,
                      "markdownDescription": "Enable/disable inlay hints for parameter names: \n\n ```typescript\n parseInt(/* str: */ '123', /* radix: */ 8)\n ```\n Require TypeScript 4.4+."
                    },
                    "javascript.inlayHints.parameterNames.enabled": {
                      "enum": [
                        "all",
                        "literals",
                        "none"
                      ],
                      "default": "none",
                      "markdownEnumDescriptions": [
                        "Enable parameter name hints for literal and non-literal arguments.",
                        "Enable parameter name hints only for literal arguments.",
                        "Disable parameter name hints."
                      ]
                    },
                    "javascript.inlayHints.parameterNames.suppressWhenArgumentMatchesName": {
                      "type": "boolean",
                      "default": true,
                      "markdownDescription": ""
                    },
                    "javascript.inlayHints.propertyDeclarationTypes.enabled": {
                      "type": "boolean",
                      "default": false,
                      "markdownDescription": "Enable/disable inlay hints for implicit types on property declarations: \n\n ```typescript\n class Foo {\n   prop /* :number */ = Date.now;\n }\n ```\n Require TypeScript 4.4+."
                    },
                    "javascript.inlayHints.variableTypes.enabled": {
                      "type": "boolean",
                      "default": false,
                      "markdownDescription": "Enable/disable inlay hints for implicit variable types: \n\n ```typescript\n const foo /* :number */ = Date.now();\n ``` \n Require TypeScript 4.4+."
                    },
                    "javascript.inlayHints.variableTypes.suppressWhenTypeMatchesName.enabled": {
                      "type": "boolean",
                      "default": true,
                    }
                  }
                }
              }
            }
          },
          "allOf": [
            {
              "$ref": "sublime://settings/LSP-plugin-base"
            },
            {
              "$ref": "sublime://settings/LSP-svelte#/definitions/PluginConfig"
            }
          ]
        }
      },
      {
        "file_patterns": [
          "/*.sublime-project"
        ],
        "schema": {
          "properties": {
            "settings": {
              "properties": {
                "LSP": {
                  "properties": {
                    "LSP-svelte": {
                      "$ref": "sublime://settings/LSP-svelte#/definitions/PluginConfig"
                    }
                  }
                }
              }
            }
          }
        }
      },
    ]
  }
}